name: frontend-pipeline

env:
    DOCKER_IMAGE_NAME: talel12/frontend-session9

on:
    push:
        branches: [main]

jobs:
    unit-test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                    node-version: 18

            - name: check node version
              run: node -v

            - name: setup dependencies
              run: npm install
            
            - name: run unit tests
              run: npm run test
            
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                name: my-artifact
                path: path/to/artifact/world.txt
    
    sonarqube:
        name: SonarQube
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: SonarQube Scan
              uses: SonarSource/sonarqube-scan-action@v5
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    build-and-push-docker-image:
        runs-on: ubuntu-latest
        needs: [unit-test, sonarqube]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: build docker image
              run: docker build -t ${{ env.DOCKER_IMAGE_NAME}} .

            - name: tag docker image
              run: docker tag ${{ env.DOCKER_IMAGE_NAME}} ${{ env.DOCKER_IMAGE_NAME}}:v${{ github.run_number }}
            
            - name: docker login
              uses: docker/login-action@v2
              with:
                username: ${{ vars.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: push versioned docker image
              run: docker push ${{ env.DOCKER_IMAGE_NAME}}:v${{ github.run_number }}
                
            - name: push latest docker image
              run: docker push ${{ env.DOCKER_IMAGE_NAME}}

    deploy-to-vps:
        runs-on: ubuntu-latest
        needs: [build-and-push-docker-image]
        steps:
            - name: Execute remote SSH commands using password
              uses: appleboy/ssh-action@v1
              with:
                host: ${{ secrets.VPS_HOST }}
                username: ${{ vars.VPS_USERNAME }}
                password: ${{ secrets.VPS_PASSWORD }}
                script: |
                  cd /home/user/devops-script/develop/frontend
                  sudo git pull
                  sudo docker pull ${{ env.DOCKER_IMAGE_NAME}}
                  sudo docker compose up -d --force-recreate --remove-orphans